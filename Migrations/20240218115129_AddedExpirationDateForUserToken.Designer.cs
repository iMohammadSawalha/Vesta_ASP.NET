// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vesta.Data;

#nullable disable

namespace Vesta.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240218115129_AddedExpirationDateForUserToken")]
    partial class AddedExpirationDateForUserToken
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Vesta.Models.Column", b =>
                {
                    b.Property<string>("WorkspaceUrl")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ColumnStatusId")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<short>("Index")
                        .HasColumnType("smallint");

                    b.Property<string>("Issues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("WorkspaceUrl", "ColumnStatusId");

                    b.ToTable("Columns");
                });

            modelBuilder.Entity("Vesta.Models.Issue", b =>
                {
                    b.Property<string>("WorkspaceUrl")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("IssueId")
                        .HasColumnType("int");

                    b.Property<string>("AssigneeEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Parent")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("WorkspaceUrl", "IssueId");

                    b.HasIndex("AssigneeEmail");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("Vesta.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("DefaultWorkspaceUrl")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.HasIndex("DefaultWorkspaceUrl")
                        .IsUnique()
                        .HasFilter("[DefaultWorkspaceUrl] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Vesta.Models.UserToken", b =>
                {
                    b.Property<Guid>("UUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UUID");

                    b.HasIndex("UserEmail");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Vesta.Models.Workspace", b =>
                {
                    b.Property<string>("Url")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("IdCounter")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Url");

                    b.ToTable("Workspaces");
                });

            modelBuilder.Entity("Vesta.Models.WorkspaceUser", b =>
                {
                    b.Property<string>("UserEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("WorkspaceUrl")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("UserEmail", "WorkspaceUrl");

                    b.HasIndex("WorkspaceUrl");

                    b.ToTable("WorkspaceUsers");
                });

            modelBuilder.Entity("Vesta.Models.Column", b =>
                {
                    b.HasOne("Vesta.Models.Workspace", "Workspace")
                        .WithMany("Columns")
                        .HasForeignKey("WorkspaceUrl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("Vesta.Models.Issue", b =>
                {
                    b.HasOne("Vesta.Models.User", "Assignee")
                        .WithMany("Issues")
                        .HasForeignKey("AssigneeEmail");

                    b.HasOne("Vesta.Models.Workspace", "Workspace")
                        .WithMany("Issues")
                        .HasForeignKey("WorkspaceUrl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("Vesta.Models.User", b =>
                {
                    b.HasOne("Vesta.Models.Workspace", "Workspace")
                        .WithOne()
                        .HasForeignKey("Vesta.Models.User", "DefaultWorkspaceUrl");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("Vesta.Models.UserToken", b =>
                {
                    b.HasOne("Vesta.Models.User", "User")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Vesta.Models.WorkspaceUser", b =>
                {
                    b.HasOne("Vesta.Models.User", "User")
                        .WithMany("WorkspaceUsers")
                        .HasForeignKey("UserEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vesta.Models.Workspace", "Workspace")
                        .WithMany("WorkspaceUsers")
                        .HasForeignKey("WorkspaceUrl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workspace");
                });

            modelBuilder.Entity("Vesta.Models.User", b =>
                {
                    b.Navigation("Issues");

                    b.Navigation("UserTokens");

                    b.Navigation("WorkspaceUsers");
                });

            modelBuilder.Entity("Vesta.Models.Workspace", b =>
                {
                    b.Navigation("Columns");

                    b.Navigation("Issues");

                    b.Navigation("WorkspaceUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
